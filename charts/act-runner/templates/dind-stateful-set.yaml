apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "act_runner.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "act_runner.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ default 1 .Values.replicas }}
  {{- end }}
  selector:
    matchLabels: {{ include "act_runner.selectorLabels" . | nindent 6 }}
  {{- with .Values.runner.updateStrategy }}
  updateStrategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels: {{ include "act_runner.selectorLabels" . | nindent 8 }}
      annotations: {{ include "act_runner.podAnnotations" . | nindent 8 }}
    spec:
      restartPolicy: Always
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "act_runner.serviceAccountName" . }}
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.podPriorityClassName }}
      priorityClassName: {{ .Values.podPriorityClassName }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.securityContext }}
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag  }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GITEA_INSTANCE_URL
              value: {{ .Values.runner.instanceURL }}
            - name: GITEA_RUNNER_REGISTRATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "act_runner.tokenSecretName" . }}
                  key: {{ include "act_runner.tokenSecretKey" . }}
            {{- if .Values.runner.config.enabled }}
            - name: CONFIG_FILE
              value: /config/config.yaml
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.lifecycle }}
          lifecycle: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath | default "/data" }}
            - name: docker-binary
              mountPath: /var/lib/docker
            {{- if .Values.runner.config.enabled }}
            - name: config
              mountPath: /config
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with  .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{ toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: docker-binary
          emptyDir: {}
        {{- if .Values.runner.config.enabled }}
        - name: config
          configMap:
            name: {{ include "act_runner.configMap" . }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ default "ReadWriteOnce" .Values.persistence.accessModes }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- with .Values.persistence.selector }}
        selector: {{ toYaml . | nindent 10 }}
        {{- end }}
  {{- end }}